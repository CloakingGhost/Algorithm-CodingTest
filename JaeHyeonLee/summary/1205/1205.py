# region 완전이진트리
'''
1차원 리스트로 구조화
0인덱스는 비우고 1인덱스부터 채운다

1로 시작하면
부모노드와 자식노드에 특별한 규칙이 생성됨



어떤 노드에서든 부모 노드 번호는 자식노드를 2로 나눈 몫
왼쪽 자식노드 번호는 부모 노드 번호 * 2
오른쪽 자식노드 번호는 부모 노드 번호 * 2 + 1

이동, 비교에 사용 됨

부모노드를 찾아가면 유관노드만 찾게 된다
시간복잡도는 트리의 깊이와 관련되어있다.

'''


# endregion

# region 힙
'''
꺼냈을 때 가장 작은 값이 나오는 자료구조(최소 힙)
꺼냈을 때 가장 큰 값이 나오는 자료구조(최대 힙)

보따리에 숫자를 막 집어 넣어도 보장됨


구현을 한다면 ?
- 넣을 때마다 정렬(nlogn)
- min 함수(n) 
- 더 빠른 방법이 있다.(logn)

heap pop 진행 시
1. 최소값
2. heap 유지

heap push 진행 시
1. heap 유지
'''


# endregion

# region 힙 구현
'''
최소 heap
1. 완전 이진 트리 일 것
2. 부모노드 <= 자식 노드

1) heap push (logn)
일단 맨 뒤
부모를 계속 비교
바꿀수 있으면 바꿔
올릴 수 있을 만큼 올리기


2) heap pop (logn)
루트 뺀다
맨 뒤 값 루트로 올린다
두 자식노드를 비교하여 더 작은 쪽으로 내려간다
내릴 수 있을 만큼 내리기

유관한 데이터만 타고 내려감
'''

  

# endregion